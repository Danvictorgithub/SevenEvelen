// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserType {
  Customer
  Admin
}
model User {
  id Int @default(autoincrement()) @id
  email String @unique
  firstName String?
  lastName String?
  password String
  image String?
  status UserType @default(Customer)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // phoneNumber String @unique
}

model Store {
  id Int @default(autoincrement()) @id
  name String
  image String?
  address String?
  opening_hours String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Brand {
  id Int @default(autoincrement()) @id
  name String
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products VendorProduct[]
}

model Vendor {
  id Int @default(autoincrement()) @id
  name String
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products VendorProduct[]
}
model ProductType {
  id Int @default(autoincrement()) @id
  name String
  productTypeParent ProductType @relation("ProductTypeBreadCrumb",fields: [productTypeParentId], references: [id], onDelete: Cascade)
  productTypeParentId Int
  productTypes ProductType[] @relation("ProductTypeBreadCrumb")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products VendorProduct[]
}
model VendorProduct {
  id Int @default(autoincrement()) @id
  upcCode String
  size String
  originalPrice Float
  brand Brand @relation(fields: [brandId], references: [id])
  brandId Int
  productType ProductType @relation(fields: [productTypeId], references: [id])
  productTypeId Int
  vendor Vendor @relation(fields: [vendorId], references: [id])
  vendorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
}

model Product {
  id Int @default(autoincrement()) @id
  product VendorProduct @relation(fields: [productId], references: [id])
  productId Int
  markupRate Float
  stock Int @default(0)
  store Store @relation(fields: [storeId], references: [id])
  storeId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

